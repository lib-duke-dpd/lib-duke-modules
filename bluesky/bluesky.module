<?php

/**
 * Implements hook_help
 *
 */
function bluesky_help($path, $arg) {
	switch ($path) {
		# notice the routing path.  This is common through Drupal modules
		case 'admin/help#bluesky':
			# funtion t() translates the supplied string based on the current language.
			# this function is as core Drupal function and is used EVERYWHERE.
			return '<p>' . t('Displays our Blue Sky view of the world.') . '</p>';
			break;
	}
}

/**
 * Implements hook_menu
 *
 * NOTE: This function supplies routing information for this 
 * module to the Drupal engine.
 *
 * @see: http://api.drupal.org/api/drupal/modules!system!system.api.php/function/hook_menu/7
 *
 * Here, we will provide a simple route (path) that maps to an even simpler callback function.
 */
function bluesky_menu() {
	# Another common practice among Drupal developers is the HEAVY use of arrays.
	$routes = array();
	
	// This route is represented by the following URL
	// http://yourdrupalsite/bluesky/helloworld
	$routes['bluesky/helloworld'] = array(
		// 'page callback' is the function that will be invoked when the above URL is given
		'page callback' => 'bluesky_helloworld',
		
		// 'file' -- the "best practice" is to separate all "page (routing)" specific 
		// functions in a file named <modulename>.pages.inc.
		// However, for this basic example, the above callback function will reside in this .module file
		# 'file' => 'bluesky.pages.inc',
		
		// this option can either simply return TRUE/FALSE, or be a function
		// that returns TRUE/FALSE
		'access callback' => TRUE,
	);
	
	// Now that we've specified all of our interested routes, return it to the 
	// Drupal engine
	return $routes;
}

/**
 * This is the page callback that is invoked when
 * you (or an end user) types the following URL:
 * http://yourdrupalsite/bluesky/helloworld
 */
function bluesky_helloworld() {
	// simply return a "hello world" string..
	
	// Remember, I warned you that the t() function will be used EVERYWHERE :)
	return '<p>' . t('Hello world') . '</p>';
}

/**
 * Implements hook_block_info()
 *
 * This is the hook that allows a developer to define any and all 
 * blocks that a site admin can choose from using the /admin/structure/blocks option.
 *
 * @returns array of block info items
 */
function bluesky_block_info() {
	$blocks = array();

	// each block is identified by a "delta" value.
	// this value will become clear when working with the 
	// hook_block_view hook.
	$blocks['partly_cloudy'] = array(
		// at a minimum, specify the 'info' for this block
		'info' => t('Blue Sky, Partly Cloudy Block'),
		'cache' => DRUPAL_NO_CACHE,
	);
	
	$blocks['partly_sunny'] = array(
		'info' => t('Blue Sky, Partly Sunny Block'),
		'cache' => DRUPAL_NO_CACHE,	// don't cache this block at any time
	);

	// NOTE -- one can also dynamically create blocks if need be:
	// pseudo code logic
	// -----------------
	// query data rows based on pre-defined criteria
	// for each row:
	//   create block using data from row, making sure each 'delta' is unique
	//
	
	return $blocks;
}
