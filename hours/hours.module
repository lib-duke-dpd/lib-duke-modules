<?php

/**
 * Implements hook_help()
 */
function hours_help($path, $arg) {
	switch ($path) {
		case 'admin/help#hours':
			return '<p>' . t('Displays Duke Library Hours dadta') . '</p>';
			break;
	}
}

/**
 * Implements hook_theme().
 */
function hours_theme() {
	return array(
		'hours_block_item' => array(
			'variables' => array('duke' => NULL, 'public' => NULL),
		),
		'hours_block_items' => array(
			'variables' => array('items' => NULL),
		),
        'hours_monthview' => array(
            'variables' => array('events' => NULL, 'start_date' => NULL, 'now_date' => NULL),
            'template' => 'hours_monthview',
        ),
	);
}

/**
 * Implements hours_menu()
 */
function hours_menu() {
	$items = array();
	
	$items['hours/month/%hours_library'] = array(
		'page callback' => 'hours_view_calendar',
		'page arguments' => array(2),
		'file' => 'hours.pages.inc',
		'access callback' => TRUE,
	);
	$items['hours/day'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('hours_day_form_callback'),
		'file' => 'hours.pages.inc',
		'access callback' => TRUE,
	);
	return $items;
}

function hours_library_load($libId) {
    // load Google calendar data for this $calendar_id (i.e. 'perkins')
	if (!isset($libid)) {
		$libid = 'perkins';
	}
	$calendarManager = CalendarManager::getInstance(
		drupal_get_path('module', 'hours') . '/calendars.xml');
		
	$googleCalID = $calendarManager->getGoogleCalendarIdForLibId($libId);
	
    return array('googleCalID' => $googleCalID, 'libId' => $libId);
}

/**
 * Implements hook_block_info()
 */
function hours_block_info() {
	$blocks['frontpage'] = array(
		'info'	=> t('4-day display of Perkins Library hours'),
		'cache'	=> DRUPAL_NO_CACHE,
	);
	return $blocks;
}

function hours_by_month_callback() {
	return t('This is a test of the emergency broadcast system.');
}

/**
 * Implements hook_block_view()
 */
function hours_block_view($delta='') {
	include_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'hours') . '/hours.block.inc';
	$fn_name = 'hours_block_view_' . $delta;
	if (function_exists($fn_name)) {
		return call_user_func($fn_name);
	}
	return t('No content to display');
}

/**
 * Implements hook_preprocess_block
 *
 */
function hours_preprocess_block(&$vars) {
	if ($vars['block']->delta == 'frontpage') {
		$vars['classes_array'][] = 'hoursTable';
	}
}

/**
 * Returns HTML for individual hours row (for frontpage block).
 *
 * @param $variables
 *   An associative array containing:
 *   - item: hour row (with Perkins hours and Public hours)
 *
 * @ingroup themeable
 */
function theme_hours_block_item($vars) {
    $block_item = '<div class="hour-row';
    if ($vars['duke']->isCurrentDay) {
    	$block_item .= ' today';
    }
    $block_item .= '">';
    $block_item .= '<div class="dukeusers">'
		 		. '<div class="hours">' . $vars['duke']->hours . '</div>'
		 		. '<div class="title">' 
		 		. sprintf('%s %s', $vars['duke']->libraryDate['shortDay'], $vars['duke']->libraryDate['dateStr']) 
		 		. '</div>'
		 		. '</div>'
		 		. '<div class="genpublic">Public: ' . $vars['public']->hours . '</div>'
		 		. '</div>'
		 ;
	return $block_item;
}

function theme_hours_block_items($vars) {
	$s = '<div class="container">';

	foreach ($vars['items'] as $item) {
		$s .= sprintf("%s", $item);
	}

	$s .= '</div>';

	return $s;
}

